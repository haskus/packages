name: CI

# Trigger the workflow on push or pull request, but only for the master branch
on:
  pull_request:
    types:
      - opened
      - synchronize
  push:
    branches: [master]

jobs:
  cabal:
    name: ${{ matrix.os }} / ghc ${{ matrix.ghc }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest]
        ghc: ['9.10.1', '9.8.2', '9.6.5']

    env:
      CONFIG: "--enable-tests --enable-benchmarks"

    steps:
    - uses: actions/checkout@v4

    - uses: haskell-actions/setup@v2
      id: setup
      name: Setup Haskell tools
      with:
        ghc-version: ${{ matrix.ghc }}
        cabal-version: "latest"
        cabal-update: true

    - name: Configure the build
      run: |
        cabal configure --enable-tests --enable-benchmarks --disable-documentation
        cabal build all --dry-run
      # The last step generates dist-newstyle/cache/plan.json for the cache key.

    - name: Restore cached dependencies
      uses: actions/cache/restore@v4
      id: cache
      env:
        key: ${{ runner.os }}-ghc-${{ steps.setup.outputs.ghc-version }}-cabal-${{ steps.setup.outputs.cabal-version }}
      with:
        path: ${{ steps.setup.outputs.cabal-store }}
        key: ${{ env.key }}-plan-${{ hashFiles('**/plan.json') }}
        restore-keys: ${{ env.key }}-

    - name: Install dependencies
      # If we had an exact cache hit, the dependencies will be up to date.
      if: steps.cache.outputs.cache-hit != 'true'
      run: cabal build all --only-dependencies

    # Cache dependencies already here, so that we do not have to rebuild them should the subsequent steps fail.
    - name: Save cached dependencies
      uses: actions/cache/save@v4
      # If we had an exact cache hit, trying to save the cache would error because of key clash.
      if: steps.cache.outputs.cache-hit != 'true'
      with:
        path: ${{ steps.setup.outputs.cabal-store }}
        key: ${{ steps.cache.outputs.cache-primary-key }}

    - name: Build
      run: cabal build all

    - name: Run tests
      run: cabal test all

    - name: Install doctest
      run: cabal install --ignore-project doctest --flag cabal-doctest

      # "cabal doctest all" doesn't work for now :'(
    - name: doctest haskus-time
      run: cabal doctest haskus-time
    - name: doctest haskus-text
      run: cabal doctest haskus-text
    - name: doctest haskus-base
      run: cabal doctest haskus-base
